name: Release
on:
  push:
    branches: [main]
    paths: 
      - 'src/**'
      - 'project.clj'
      - '.github/workflows/release.yml'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  release:
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest]
        gu-binary: [gu]
        include: 
          - os: ubuntu-latest
            native-image: native-image
            version: linux-amd64
          - os: macos-latest
            native-image: native-image
            version: darwin-amd64

    runs-on: ${{ matrix.os }}

    steps:
      - uses: actions/checkout@v2

      - name: Prepare java
        uses: actions/setup-java@v2
        with:
          distribution: 'zulu'
          java-version: '11'

      - name: Install clojure tools
        uses: DeLaGuardo/setup-clojure@3.6
        with:
          lein: latest

      - name: Setup Graalvm
        uses: DeLaGuardo/setup-graalvm@master
        id: setup-graalvm
        with:
          graalvm-version: 21.3.0.java11

      - name: Install native-image component
        run: | 
          ${{ matrix.gu-binary }} install native-image

      - name: Download project dependencies
        run: lein deps

      - name: Clean target directory
        run: lein clean

      - name: Generate clj-holmes uberjar
        run: lein uberjar

      - name: Generate clj-holmes native binarty
        run: |
          lein native -H:Name=clj-holmes-${{ matrix.os }}

      - name: Retrieve version
        run: echo "TAG_NAME=v$(lein project-version)" >> $GITHUB_ENV

      - name: Release
        uses: softprops/action-gh-release@v1
        if: github.ref == 'refs/heads/main'
        with:
          tag_name: ${{ env.TAG_NAME }}
          files: clj-holmes-${{ matrix.os }}

      - name: Retrieve version
        run: echo "TAG_NAME=v$(lein project-version)" >> $GITHUB_ENV
        if: matrix.os == 'ubuntu-latest'

      - name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
        if: matrix.os == 'ubuntu-latest'

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        if: matrix.os == 'ubuntu-latest'

      - name: Build and push Docker image
        uses: docker/build-push-action@ad44023a93711e3deb337508980b4b5e9bcdc5dc
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        if: matrix.os == 'ubuntu-latest'
